<configuration>
  <property>
    <name>yarn.resourcemanager.hostname</name>
    <value>{{ master_host }}</value>
  </property>

  {% for service, port in [ 
      [ "resourcemanager",                   yarn_resourcemanager_port                  ],
      [ "resourcemanager.scheduler",         yarn_resourcemanager_scheduler_port        ],
      [ "resourcemanager.webapp",            yarn_resourcemanager_webapp_port           ],
      [ "resourcemanager.resource-tracker",  yarn_resourcemanager_resource_tracker_port ],
      [ "resourcemanager.admin",             yarn_resourcemanager_admin_port            ],
    ]
  %}
    <property>
      <name>yarn.{{ service }}.address</name>
      <value>{{ master_host }}:{{ port }}</value>
    </property>
  {% endfor %}

  {% for service, port in [
      [ "nodemanager",            yarn_nodemanager_port           ],
      [ "nodemanager.localizer",  yarn_nodemanager_localizer_port ],
      [ "nodemanager.webapp",     yarn_nodemanager_webapp_port    ],
    ]
  %}
    <property>
      <name>yarn.{{ service }}.address</name>
      <value>0.0.0.0:{{ port }}</value>
    </property>
  {% endfor %}

  <property>
    <name>yarn.nodemanager.aux-services</name>
    <value>mapreduce_shuffle</value>
  </property>
  <property>
    <name>yarn.log-aggregation-enable</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.application.classpath</name>
    <value>${HADOOP_CONF_DIR},${HADOOP_COMMON_HOME}/share/hadoop/common/*,${HADOOP_COMMON_HOME}/share/hadoop/common/lib/*,${HADOOP_HDFS_HOME}/share/hadoop/hdfs/*,${HADOOP_HDFS_HOME}/share/hadoop/hdfs/lib/*,${HADOOP_MAPRED_HOME}/share/hadoop/mapreduce/*,${HADOOP_MAPRED_HOME}/share/hadoop/mapreduce/lib/*,${HADOOP_YARN_HOME}/share/hadoop/yarn/*,${HADOOP_YARN_HOME}/share/hadoop/yarn/lib/*</value>
  </property>
  <property>
    <name>yarn.webapp.ui2.enable</name>
    <value>true</value>
  </property>
  
  {% if use_secure_mode %}
    {% for service in ["resourcemanager", "nodemanager"] %}
      <property>
        <name>yarn.{{ service }}.principal</name>
        <value>{{ yarn_user }}/_HOST@{{ kdc_realm_service }}</value>
      </property>
      <property>
        <name>yarn.{{ service }}.keytab</name>
        <value>{{ keytab_path }}</value>
      </property>
    {% endfor %}

    <property>
      <name>yarn.resourcemanager.webapp.spnego-principal</name>
      <value>HTTP/_HOST@{{ kdc_realm_service }}</value>
    </property>
    <property>
      <name>yarn.resourcemanager.webapp.spnego-keytab-file</name>
      <value>{{ keytab_path }}</value>
    </property>
  {% endif %}
</configuration>
